extends layout

// Content block for the page
block content
    // Page heading
    h1 Practice Drawing

    // Create a div with an id "canvasContainer" to wrap the canvas and button
    #canvasContainer
        // Create a new row using Bootstrap's grid system
        .row
            // Create a new column using Bootstrap's grid system
            .col
                canvas#drawingCanvas(style="border: 1px solid black;")
                // The canvas element where drawing will happen
        // Create another row to hold the clear button
        .row
            // Create another column to ensure the button is positioned below the canvas
            .col
                button#clearButton Clear Canvas
                // A button to clear the canvas

    // Script section where JavaScript code is included
    script.
        // Get the canvas element and its 2D rendering context
        const canvas = document.getElementById("drawingCanvas");
        const ctx = canvas.getContext("2d");

        // A variable to keep track of whether the user is drawing or not
        let isDrawing = false;

        // Function to set isDrawing to true and start drawing
        function startPosition(e) {
            isDrawing = true;
            draw(e);
        }

        // Function to set isDrawing to false and stop drawing
        function endPosition() {
            isDrawing = false;
            ctx.beginPath();
        }

        // Function to handle drawing on the canvas
        function draw(e) {
            if (!isDrawing) return;

            // Set line properties
            ctx.lineWidth = 3;
            ctx.lineCap = "round";
            ctx.strokeStyle = "black";

            // Draw a line from the previous position to the current position
            ctx.lineTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
            ctx.stroke();
            ctx.beginPath();
            ctx.moveTo(e.clientX - canvas.offsetLeft, e.clientY - canvas.offsetTop);
        }

        // Add event listeners for mouse actions (mousedown, mouseup, mousemove) to start, stop, and draw on the canvas
        canvas.addEventListener("mousedown", startPosition);
        canvas.addEventListener("mouseup", endPosition);
        canvas.addEventListener("mousemove", draw);

        // Add event listeners for touch actions (touchstart, touchend, touchmove) to start, stop, and draw on the canvas (for touch devices)
        canvas.addEventListener("touchstart", startPosition);
        canvas.addEventListener("touchend", endPosition);
        canvas.addEventListener("touchmove", draw);

        // Get the clear button and add a click event listener to clear the canvas
        const clearButton = document.getElementById("clearButton");
        clearButton.addEventListener("click", () => {
            // Clear the entire canvas by setting its width and height to its current width and height
            ctx.clearRect(0, 0, canvas.width, canvas.height);
        });
